version: '3.8'

services:
  # PostgreSQL 데이터베이스 서비스
  postgres:
    image: postgres:15-alpine
    container_name: quiz-postgres
    environment:
      POSTGRES_DB: quiz_db
      POSTGRES_USER: quizuser
      POSTGRES_PASSWORD: quizpass
      # 타임존 설정 - 한국 시간 사용
      TZ: Asia/Seoul
    ports:
      - "5432:5432"
    volumes:
      # 데이터 영속성을 위한 볼륨 설정
      - postgres_data:/var/lib/postgresql/data
      # 초기화 스크립트 디렉토리 마운트
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      # 데이터베이스 헬스체크 설정
      test: ["CMD-SHELL", "pg_isready -U quizuser -d quiz_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quiz-network

  # Redis 캐시 서비스
  redis:
    image: redis:7-alpine
    container_name: quiz-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - quiz-network

  # Elasticsearch 검색 엔진
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: quiz-elasticsearch
    environment:
      - node.name=quiz-es01
      - cluster.name=quiz-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms128m -Xmx256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - quiz-network
      
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: quiz-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      # 데이터베이스 연결 설정
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/quiz_db
      SPRING_DATASOURCE_USERNAME: quizuser
      SPRING_DATASOURCE_PASSWORD: quizpass
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      
      # JPA/Hibernate 설정
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: Asia/Seoul
      SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE: "50"
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DEFAULT_BATCH_FETCH_SIZE: "1000"
      SPRING_JPA_OPEN_IN_VIEW: "false"
      
      # Redis 연결 설정
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_TIMEOUT: 10000
      
      # Elasticsearch 연결 설정
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200
      SPRING_ELASTICSEARCH_CONNECTION_TIMEOUT: 5s
      SPRING_ELASTICSEARCH_SOCKET_TIMEOUT: 3s
      
      # 서버 설정
      SERVER_PORT: 8080
      SERVER_SERVLET_CONTEXT_PATH: /api
      
      # 로깅 설정
      LOGGING_LEVEL_ROOT: INFO
      LOGGING_LEVEL_COM_QUIZPLATFORM: DEBUG
      
      # JWT 설정 (기본값 설정)
      JWT_SECRET: your256bitlong32charactersecretkey
      JWT_ACCESS_TOKEN_VALIDITY: 3600000
      JWT_REFRESH_TOKEN_VALIDITY: 1209600000
      
      # 기타 환경 변수
      SPRING_PROFILES_ACTIVE: default
      TZ: Asia/Seoul
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - quiz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # React 프론트엔드 서비스
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: quiz-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - quiz-network

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data:

networks:
  quiz-network:
    driver: bridge